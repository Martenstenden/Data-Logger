<UserControl x:Class="Data_Logger.Views.OpcUaTabView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vm="clr-namespace:Data_Logger.ViewModels"
             xmlns:enums="clr-namespace:Data_Logger.Enums"
             xmlns:converters="clr-namespace:Data_Logger.Converters"
             xmlns:views="clr-namespace:Data_Logger.Views"
             xmlns:dataLogger="clr-namespace:Data_Logger"
             x:Name="OpcUaTabViewControl" mc:Ignorable="d"
             d:DataContext="{d:DesignInstance Type=vm:OpcUaTabViewModel, IsDesignTimeCreatable=False}"
             d:DesignHeight="700" d:DesignWidth="1000">

    <UserControl.Resources>
        <converters:BooleanToConnectionStatusConverter x:Key="BooleanToConnectionStatusConverter" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:BooleanToForwardBackwardConverter x:Key="BooleanToForwardBackwardConverter"/>

        <Style TargetType="{x:Type TreeViewItem}">
            <Setter Property="Header" Value="{Binding DisplayName}" />
            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
            <Setter Property="ItemsSource" Value="{Binding Children}" />
            <Setter Property="ToolTip">
                <Setter.Value>
                    <StackPanel MaxWidth="300">
                        <TextBlock Text="{Binding NodeId, StringFormat='NodeId: {0}'}" TextWrapping="Wrap"/>
                        <TextBlock Text="{Binding NodeClass, StringFormat='Klasse: {0}'}" />
                    </StackPanel>
                </Setter.Value>
            </Setter>
            <Setter Property="ContextMenu">
                <Setter.Value>
                    <ContextMenu DataContext="{Binding Path=DataContext, Source={x:Reference Name=OpcUaTabViewControl}}">
                        <MenuItem Header="Voeg toe aan Monitoring"
                                  Command="{Binding AddSelectedNodeToMonitoringCommand}"
                                  CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}"/>                        
                        <MenuItem Header="Verwijder van Monitoring"
                                  Command="{Binding RemoveSelectedNodeFromMonitoringCommand}"
                                  CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}"/>                        
                        <MenuItem Header="Lees Huidige Waarde"
                                  Command="{Binding ReadSelectedNodeValueCommand}"
                                  CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContextMenu}}}"/>                        
                        <Separator/>
                        </ContextMenu>
                </Setter.Value>
            </Setter>
        </Style>

        <HierarchicalDataTemplate DataType="{x:Type vm:OpcUaNodeViewModel}" ItemsSource="{Binding Children}">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding DisplayName}" />
                <TextBlock Text="{Binding NodeClass, StringFormat=' ({0})'}" Foreground="Gray" FontStyle="Italic" Margin="5,0,0,0" FontSize="10"/>
            </StackPanel>
        </HierarchicalDataTemplate>

        <ObjectDataProvider x:Key="OpcUaDataTypeEnumValuesForGrid" MethodName="GetValues" ObjectType="{x:Type sys:Enum}"
                            xmlns:sys="clr-namespace:System;assembly=mscorlib">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enums:OpcUaDataType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <Style x:Key="DataGridButtonStyleInCell" TargetType="Button">
            <Setter Property="Padding" Value="3,1"/>
            <Setter Property="Margin" Value="1"/>
            <Setter Property="MinWidth" Value="50"/>
            <Setter Property="FontSize" Value="10"/>
        </Style>
        
        <Style TargetType="{x:Type TabItem}" x:Key="PlotTabItemStyle">
            <Setter Property="Padding" Value="5,2"/>
            <Setter Property="HeaderTemplate">
                <Setter.Value>
                    <DataTemplate DataType="{x:Type vm:PlotTabViewModel}">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Header}" VerticalAlignment="Center" Margin="0,0,8,0"/>
                            <Button Command="{Binding CloseTabCommand}" 
                                    Content="&#x2715;" Padding="4,0" 
                                    FontSize="10" 
                                    FontWeight="Bold"
                                    Background="Transparent" 
                                    BorderThickness="0" 
                                    Foreground="DimGray"
                                    Cursor="Hand"
                                    ToolTip="Sluit dit grafiektabblad">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Button">
                                                    <Border Background="{TemplateBinding Background}">
                                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Foreground" Value="Red"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </StackPanel>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>

    <Grid Margin="5">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0" Margin="0,0,0,5">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0" HorizontalAlignment="Left" Margin="0,0,20,0">
                    <TextBlock Text="{Binding OpcUaConfig.ConnectionName}" FontSize="16" FontWeight="Bold"/>
                    <TextBlock Text="{Binding OpcUaConfig.EndpointUrl, StringFormat='Endpoint: {0}'}" FontSize="10" ToolTip="{Binding OpcUaConfig.EndpointUrl}" TextTrimming="CharacterEllipsis"/>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Status: " FontSize="10" FontWeight="SemiBold"/>
                        <TextBlock Text="{Binding IsConnected, Converter={StaticResource BooleanToConnectionStatusConverter}}" FontSize="10" />
                    </StackPanel>
                </StackPanel>
                <WrapPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Top">
                    <Button Content="Verbinden" Command="{Binding ConnectCommand}" MinWidth="70" Margin="0,0,5,2"/>
                    <Button Content="Verbreken" Command="{Binding DisconnectCommand}" MinWidth="70" Margin="0,0,5,2"/>
                    <Button Content="Lees Config Tags" Command="{Binding ReadAllConfiguredTagsCommand}" MinWidth="100" Margin="0,0,5,2" ToolTip="Leest waarden van tags in de huidige monitoring configuratie."/>
                    <Button Content="Refresh Address Space" Command="{Binding LoadAddressSpaceCommand}" MinWidth="100" Margin="0,0,5,2"/>
                    <TextBlock Text="Laden..." VerticalAlignment="Center" Margin="5,0,0,0" Visibility="{Binding IsBrowse, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                </WrapPanel>
            </Grid>
            <TextBlock Text="{Binding LastReadNodeValue}" FontSize="10" TextWrapping="Wrap" Margin="0,5,0,0" MinHeight="15" FontStyle="Italic"/>
        </StackPanel>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.2*" MinWidth="280"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="0.65*" MinWidth="350"/>
            </Grid.ColumnDefinitions>

            <TabControl Grid.Column="0" Margin="0,0,2,0">
                <TabItem Header="Address Space">
                    <Border BorderBrush="LightGray" BorderThickness="1">
                        <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                            <TreeView ItemsSource="{Binding RootNodes}" Padding="2"
                                      x:Name="OpcUaNodeTreeView" 
                                      SelectedItemChanged="TreeView_SelectedItemChanged"/>
                        </ScrollViewer>
                    </Border>
                </TabItem>
                <TabItem Header="Attributes &amp; References">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/> 
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <TextBlock Grid.Row="0" Text="Node Attributen:" FontWeight="Bold" Margin="5,5,5,2"/>
                        <ListView Grid.Row="1" ItemsSource="{Binding SelectedNodeAttributes}" Margin="5,0,5,5" AlternationCount="2">
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsGood}" Value="False">
                                            <Setter Property="Foreground" Value="Red"/>
                                        </DataTrigger>
                                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                            <Setter Property="Background" Value="#F5F5F5" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header="Attribuut" DisplayMemberBinding="{Binding AttributeName}" Width="150"/>
                                    <GridViewColumn Header="Waarde" DisplayMemberBinding="{Binding Value}" Width="Auto"/>
                                    <GridViewColumn Header="Status" DisplayMemberBinding="{Binding StatusCodeDisplay}" Width="100"/>
                                </GridView>
                            </ListView.View>
                        </ListView>

                        <GridSplitter Grid.Row="2" Height="5" HorizontalAlignment="Stretch" VerticalAlignment="Center" Background="LightGray" ShowsPreview="True"/>

                        <TextBlock Grid.Row="3" Text="Node Referenties:" FontWeight="Bold" Margin="5,5,5,2"/>
                        <ListView Grid.Row="4" ItemsSource="{Binding SelectedNodeReferences}" Margin="5,0,5,5" AlternationCount="2">
                             <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Style.Triggers>
                                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                            <Setter Property="Background" Value="#F5F5F5" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header="Type" DisplayMemberBinding="{Binding ReferenceTypeDisplay}" Width="150"/>
                                    <GridViewColumn Header="Richting" Width="70">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding IsForward, Converter={StaticResource BooleanToForwardBackwardConverter}}"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Target Naam" DisplayMemberBinding="{Binding TargetDisplayName}" Width="Auto"/>
                                    <GridViewColumn Header="Target Klasse" DisplayMemberBinding="{Binding TargetNodeClass}" Width="100"/>
                                </GridView>
                            </ListView.View>
                        </ListView>
                        
                        <TextBlock Grid.Row="1" Grid.RowSpan="4" Text="Details laden..." 
                                   HorizontalAlignment="Center" VerticalAlignment="Center"
                                   Visibility="{Binding IsLoadingNodeDetails, Converter={StaticResource BooleanToVisibilityConverter}}"
                                   IsEnabled="{Binding IsLoadingNodeDetails}"/>
                    </Grid>
                </TabItem>
            </TabControl>

            <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="LightGray"/>

            <Grid Grid.Column="2" Margin="2,0,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="0.4*" MinHeight="150"/> <RowDefinition Height="Auto"/>
                    <RowDefinition Height="0.6*" MinHeight="10"/> </Grid.RowDefinitions>

                <GroupBox Grid.Row="0" Header="Gemonitorde OPC UA Tags (Configuratie Live Waarden)" Padding="2"
                          Visibility="{Binding IsConnected, Converter={StaticResource BooleanToVisibilityConverter}}"> 
                    <DataGrid ItemsSource="{Binding OpcUaConfig.TagsToMonitor}"
                              AutoGenerateColumns="False"
                              CanUserAddRows="False" 
                              CanUserDeleteRows="False" 
                              AlternationCount="2" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto"
                              SelectionUnit="FullRow" SelectionMode="Single">
                        <DataGrid.RowStyle>
                            <Style TargetType="DataGridRow">
                                <Setter Property="ToolTip" Value="{Binding ErrorMessage}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentAlarmState}" Value="{x:Static enums:TagAlarmState.High}"><Setter Property="Background" Value="LightGoldenrodYellow"/></DataTrigger>
                                    <DataTrigger Binding="{Binding CurrentAlarmState}" Value="{x:Static enums:TagAlarmState.Low}"><Setter Property="Background" Value="LightGoldenrodYellow"/></DataTrigger>
                                    <DataTrigger Binding="{Binding CurrentAlarmState}" Value="{x:Static enums:TagAlarmState.HighHigh}"><Setter Property="Background" Value="LightPink"/><Setter Property="FontWeight" Value="Bold"/></DataTrigger>
                                    <DataTrigger Binding="{Binding CurrentAlarmState}" Value="{x:Static enums:TagAlarmState.LowLow}"><Setter Property="Background" Value="LightPink"/><Setter Property="FontWeight" Value="Bold"/></DataTrigger>
                                    <DataTrigger Binding="{Binding CurrentAlarmState}" Value="{x:Static enums:TagAlarmState.Error}"><Setter Property="Background" Value="LightGray"/><Setter Property="FontStyle" Value="Italic"/></DataTrigger>
                                    <DataTrigger Binding="{Binding CurrentAlarmState}" Value="{x:Static enums:TagAlarmState.Outlier}"><Setter Property="Background" Value="LightSkyBlue"/><Setter Property="FontStyle" Value="Italic"/></DataTrigger>
                                    <Trigger Property="ItemsControl.AlternationIndex" Value="1"><Setter Property="Background" Value="#EFEFEF" /></Trigger>
                                    <DataTrigger Binding="{Binding CurrentAlarmState}" Value="{x:Static enums:TagAlarmState.Normal}"><Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=Background}"/></DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Tag Naam" Binding="{Binding TagName}" Width="*" IsReadOnly="True"/>
                            <DataGridTextColumn Header="NodeID" Binding="{Binding NodeId}" Width="1.5*" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Data Type (Config)" Binding="{Binding DataType, Mode=OneWay}" Width="Auto" IsReadOnly="True"/>
                            
                            <DataGridTextColumn Header="Sampling (ms)" Width="Auto">
                                <DataGridTextColumn.Binding>
                                    <Binding Path="SamplingInterval" UpdateSourceTrigger="LostFocus">
                                        <Binding.ValidationRules><ExceptionValidationRule/></Binding.ValidationRules>
                                    </Binding>
                                </DataGridTextColumn.Binding>
                                <DataGridTextColumn.EditingElementStyle>
                                    <Style TargetType="TextBox">
                                        <EventSetter Event="LostFocus" Handler="ConfigTagTextBox_LostFocus_SaveChanges"/>
                                    </Style>
                                </DataGridTextColumn.EditingElementStyle>
                            </DataGridTextColumn>

                            <DataGridCheckBoxColumn Header="Actief" Width="50">
                                <DataGridCheckBoxColumn.Binding>
                                    <Binding Path="IsActive" UpdateSourceTrigger="PropertyChanged"/>
                                </DataGridCheckBoxColumn.Binding>
                                <DataGridCheckBoxColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <EventSetter Event="CheckBox.Checked" Handler="ConfigTagCheckBox_Changed_SaveChanges"/>
                                        <EventSetter Event="CheckBox.Unchecked" Handler="ConfigTagCheckBox_Changed_SaveChanges"/>
                                        <Setter Property="HorizontalAlignment" Value="Center"/>
                                    </Style>
                                </DataGridCheckBoxColumn.CellStyle>
                            </DataGridCheckBoxColumn>

                            <DataGridTextColumn Header="Waarde" Binding="{Binding FormattedLiveValue}" Width="*" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Tijdstempel" Binding="{Binding Timestamp, StringFormat='HH:mm:ss.fff', Mode=OneWay}" Width="Auto" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Kwaliteit" Width="Auto" IsReadOnly="True">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="HorizontalAlignment" Value="Center"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsGoodQuality}" Value="True"><Setter Property="Text" Value="Goed"/><Setter Property="Foreground" Value="Green"/></DataTrigger>
                                            <DataTrigger Binding="{Binding IsGoodQuality}" Value="False"><Setter Property="Text" Value="Slecht"/><Setter Property="Foreground" Value="Red"/></DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="ToolTip" Value="{Binding ErrorMessage}"/>
                                     </Style>
                                </DataGridTextColumn.CellStyle>
                            </DataGridTextColumn>
                            
                            <DataGridTemplateColumn Header="Grafiek" Width="Auto">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="Toon Grafiek" 
                                                Command="{Binding DataContext.AddTagToPlotCommand,
                                                RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                                CommandParameter="{Binding}"
                                                Style="{StaticResource DataGridButtonStyleInCell}"
                                                Padding="5,2"
                                                Margin="2"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            
                            <DataGridTemplateColumn Header="Grafiek" Width="Auto">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="Voeg toe aan Huidige Grafiek"
                                                Command="{Binding DataContext.AddSelectedTagToCurrentPlotCommand,
                                                RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                                CommandParameter="{Binding }"
                                                Style="{StaticResource DataGridButtonStyleInCell}"
                                                ToolTip="Voegt de geselecteerde OPC UA node (indien een gemonitorde tag) toe aan de actieve grafiek tab."
                                                Padding="5,2"
                                                Margin="5"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn Header="Actie" Width="Auto">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="Stop" 
                                                ToolTip="Stop Monitoring" 
                                                Style="{StaticResource DataGridButtonStyleInCell}"
                                                Command="{Binding DataContext.UnmonitorTagFromListCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                                CommandParameter="{Binding}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </GroupBox>

                <GridSplitter Grid.Row="1" Height="5" HorizontalAlignment="Stretch" VerticalAlignment="Center" Background="LightGray"/>
                
                <TabControl Grid.Row="2" ItemsSource="{Binding ActivePlotTabs}" SelectedItem="{Binding SelectedPlotTab}" Margin="0,5,0,0" Padding="2">
                    <TabControl.ItemContainerStyle>
                        <StaticResource ResourceKey="PlotTabItemStyle"/>
                    </TabControl.ItemContainerStyle>
                    <TabControl.ContentTemplate>
                        <DataTemplate DataType="{x:Type vm:PlotTabViewModel}">
                            <views:SinglePlotView Margin="2"/>
                        </DataTemplate>
                    </TabControl.ContentTemplate>
                </TabControl>

                </Grid>
        </Grid>
    </Grid>
</UserControl>