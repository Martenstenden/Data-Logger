<UserControl
    d:DataContext="{d:DesignInstance Type=viewmodels:OpcUaTabViewModel,
                                     IsDesignTimeCreatable=False}"
    d:DesignHeight="700"
    d:DesignWidth="1200"
    mc:Ignorable="d"
    x:Class="Data_Logger.Views.OpcUaTabView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:converters="clr-namespace:Data_Logger.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewmodels="clr-namespace:Data_Logger.ViewModels"
    xmlns:views="clr-namespace:Data_Logger.Views"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <UserControl.Resources>
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter" />
        <converters:BooleanToForwardBackwardConverter x:Key="BooleanToForwardBackwardConverter" />
        <converters:NullToBooleanConverter x:Key="NullToBooleanConverter" />

        <Style TargetType="Button">
            <Setter Property="Padding" Value="5,2" />
            <Setter Property="Margin" Value="2" />
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="0,0,5,0" />
        </Style>
        <Style TargetType="ComboBox">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="0,0,5,0" />
        </Style>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Border
            BorderBrush="LightGray"
            BorderThickness="0,0,0,1"
            Grid.Row="0"
            Padding="5">
            <StackPanel Orientation="Horizontal">
                <Button
                    Command="{Binding ConnectCommand}"
                    Content="Verbinden"
                    IsEnabled="{Binding IsConnected, Converter={StaticResource InverseBooleanConverter}}" />
                <Button
                    Command="{Binding DisconnectCommand}"
                    Content="Verbinding verbreken"
                    IsEnabled="{Binding IsConnected}" />
                <Button
                    Command="{Binding LoadAddressSpaceCommand}"
                    Content="Address Space Laden/Verversen"
                    IsEnabled="{Binding IsConnected}" />
                <Button
                    Command="{Binding ReadAllConfiguredTagsCommand}"
                    Content="Lees Alle Geconfigureerde Tags"
                    IsEnabled="{Binding IsConnected}" />
            </StackPanel>
        </Border>

        <Grid Grid.Row="1" Margin="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    MaxWidth="550"
                    MinWidth="300"
                    Width="0.4*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="0.6*" />
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="0.5*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="0.5*" />
                </Grid.RowDefinitions>

                <Border
                    BorderBrush="LightGray"
                    BorderThickness="1"
                    Grid.Row="1"
                    Margin="0,0,0,5"
                    Padding="2">
                    <TreeView
                        BorderBrush="LightGray"
                        BorderThickness="1"
                        HorizontalAlignment="Stretch"
                        ItemsSource="{Binding RootNodes}"
                        SelectedItemChanged="TreeView_SelectedItemChanged"
                        VerticalAlignment="Stretch">
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="{x:Type TreeViewItem}">
                                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                                <Setter Property="Padding" Value="2" />
                                <Setter Property="Margin" Value="0,1" />
                                <!-- <EventSetter Event="Loaded" Handler="TreeViewItem_Loaded_Debug" /> -->
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsVisible}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>

                            </Style>
                        </TreeView.ItemContainerStyle>
                        <TreeView.ItemTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type viewmodels:OpcUaNodeViewModel}" ItemsSource="{Binding Children}">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding DisplayName}" ToolTip="{Binding NodeId}" />
                                </StackPanel>
                            </HierarchicalDataTemplate>
                        </TreeView.ItemTemplate>
                    </TreeView>
                </Border>

                <Border
                    BorderBrush="LightGray"
                    BorderThickness="1"
                    Grid.Row="2"
                    Margin="0,0,0,5"
                    Padding="5">
                    <StackPanel>
                        <TextBlock
                            FontWeight="SemiBold"
                            Margin="0,0,0,5"
                            Text="Geselecteerde Node Acties:" />
                        <TextBlock
                            FontStyle="Italic"
                            Margin="0,0,0,5"
                            MinHeight="20"
                            Text="{Binding LastReadNodeValueMessage}"
                            TextWrapping="Wrap" />
                        <WrapPanel HorizontalAlignment="Left" Orientation="Horizontal">
                            <Button
                                Command="{Binding ReadSelectedNodeValueCommand}"
                                Content="Lees Waarde"
                                IsEnabled="{Binding IsConnected}" />
                            <Button
                                Command="{Binding AddSelectedNodeToMonitoringCommand}"
                                Content="+ Monitor"
                                IsEnabled="{Binding IsConnected}"
                                ToolTip="Voeg geselecteerde node toe aan monitoring lijst" />
                            <Button
                                Command="{Binding RemoveSelectedNodeFromMonitoringCommand}"
                                Content="- Monitor"
                                IsEnabled="{Binding IsConnected}"
                                ToolTip="Verwijder geselecteerde node van monitoring lijst" />
                        </WrapPanel>
                    </StackPanel>
                </Border>

                <TabControl
                    Grid.Row="3"
                    IsEnabled="{Binding SelectedOpcUaNodeInTree, Converter={StaticResource NullToBooleanConverter}}"
                    Margin="0,0,0,5"
                    MinHeight="150">
                    <TabItem Header="Attributen">
                        <DataGrid
                            AutoGenerateColumns="False"
                            CanUserAddRows="False"
                            CanUserDeleteRows="False"
                            HorizontalScrollBarVisibility="Auto"
                            IsReadOnly="True"
                            ItemsSource="{Binding SelectedNodeAttributes}">
                            <DataGrid.Columns>
                                <DataGridTextColumn
                                    Binding="{Binding AttributeName}"
                                    Header="Attribuut"
                                    SortDirection="Ascending"
                                    Width="Auto" />
                                <DataGridTextColumn
                                    Binding="{Binding Value}"
                                    Header="Waarde"
                                    Width="*" />
                                <DataGridTextColumn
                                    Binding="{Binding StatusCodeDisplay}"
                                    Header="Status"
                                    Width="Auto" />
                            </DataGrid.Columns>
                        </DataGrid>
                    </TabItem>
                    <TabItem Header="Referenties">
                        <DataGrid
                            AutoGenerateColumns="False"
                            CanUserAddRows="False"
                            CanUserDeleteRows="False"
                            HorizontalScrollBarVisibility="Auto"
                            IsReadOnly="True"
                            ItemsSource="{Binding SelectedNodeReferences}">
                            <DataGrid.Columns>
                                <DataGridTextColumn
                                    Binding="{Binding ReferenceTypeDisplay}"
                                    Header="Type"
                                    SortDirection="Ascending"
                                    Width="*" />
                                <DataGridTextColumn
                                    Binding="{Binding IsForward, Converter={StaticResource BooleanToForwardBackwardConverter}}"
                                    Header="Richting"
                                    Width="Auto" />
                                <DataGridTextColumn
                                    Binding="{Binding TargetDisplayName}"
                                    Header="Doel Node"
                                    Width="2*" />
                                <DataGridTextColumn
                                    Binding="{Binding TargetNodeIdString}"
                                    Header="Doel NodeId"
                                    Width="2*" />
                                <DataGridTextColumn
                                    Binding="{Binding TargetNodeClass}"
                                    Header="Doel Klasse"
                                    Width="Auto" />
                            </DataGrid.Columns>
                        </DataGrid>
                    </TabItem>
                </TabControl>
            </Grid>

            <GridSplitter
                Background="Transparent"
                Grid.Column="1"
                HorizontalAlignment="Stretch"
                ShowsPreview="True"
                VerticalAlignment="Stretch"
                Width="5" />

            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="0.5*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="0.5*" />
                </Grid.RowDefinitions>

                <StackPanel
                    Grid.Row="0"
                    Margin="0,0,0,5"
                    Orientation="Vertical">
                    <TextBlock
                        FontWeight="SemiBold"
                        Margin="0,0,0,5"
                        Text="Actief Gemonitorde OPC UA Tags:" />
                </StackPanel>

                <DataGrid
                    AutoGenerateColumns="False"
                    CanUserAddRows="False"
                    CanUserDeleteRows="False"
                    Grid.Row="1"
                    HorizontalScrollBarVisibility="Auto"
                    ItemsSource="{Binding OpcUaConfig.TagsToMonitor}"
                    Margin="0,0,0,5"
                    SelectionMode="Single"
                    VerticalScrollBarVisibility="Auto">
                    <DataGrid.Columns>
                        <DataGridCheckBoxColumn Binding="{Binding IsActive, UpdateSourceTrigger=PropertyChanged}" Header="Actief">
                            <DataGridCheckBoxColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <EventSetter Event="CheckBox.Checked" Handler="ConfigTagCheckBox_Changed_SaveChanges" />
                                    <EventSetter Event="CheckBox.Unchecked" Handler="ConfigTagCheckBox_Changed_SaveChanges" />
                                </Style>
                            </DataGridCheckBoxColumn.CellStyle>
                        </DataGridCheckBoxColumn>
                        <DataGridTextColumn
                            Binding="{Binding TagName}"
                            Header="Tag Naam"
                            Width="1.5*" />
                        <DataGridTextColumn
                            Binding="{Binding NodeId}"
                            Header="NodeID"
                            Width="2*" />
                        <DataGridTextColumn
                            Binding="{Binding FormattedLiveValue, Mode=OneWay}"
                            Header="Huidige Waarde"
                            IsReadOnly="True"
                            Width="*" />
                        <DataGridTextColumn
                            Binding="{Binding Timestamp, Mode=OneWay, StringFormat='HH:mm:ss.fff'}"
                            Header="Tijdstip"
                            IsReadOnly="True"
                            Width="Auto" />
                        <!--  <DataGridComboBoxColumn  -->
                        <!--  Header="Datatype"  -->
                        <!--  ItemsSource="{Binding Source={x:Static models:OpcUaDataTypeValues.Instance}}"  -->
                        <!--  SelectedItemBinding="{Binding DataType}"  -->
                        <!--  Width="Auto" />  -->
                        <DataGridTextColumn Binding="{Binding SamplingInterval, UpdateSourceTrigger=LostFocus}" Header="Interval (ms)">
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <EventSetter Event="LostFocus" Handler="ConfigTagTextBox_LostFocus_SaveChanges" />
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>
                        <DataGridCheckBoxColumn Binding="{Binding IsAlarmingEnabled, UpdateSourceTrigger=PropertyChanged}" Header="Alarm?">
                            <DataGridCheckBoxColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <EventSetter Event="CheckBox.Checked" Handler="ConfigTagCheckBox_Changed_SaveChanges" />
                                    <EventSetter Event="CheckBox.Unchecked" Handler="ConfigTagCheckBox_Changed_SaveChanges" />
                                </Style>
                            </DataGridCheckBoxColumn.CellStyle>
                        </DataGridCheckBoxColumn>
                        <DataGridTextColumn
                            Binding="{Binding HighHighLimit, UpdateSourceTrigger=LostFocus, StringFormat=F2}"
                            Header="HH"
                            Width="0.5*" />
                        <DataGridTextColumn
                            Binding="{Binding HighLimit, UpdateSourceTrigger=LostFocus, StringFormat=F2}"
                            Header="H"
                            Width="0.5*" />
                        <DataGridTextColumn
                            Binding="{Binding LowLimit, UpdateSourceTrigger=LostFocus, StringFormat=F2}"
                            Header="L"
                            Width="0.5*" />
                        <DataGridTextColumn
                            Binding="{Binding LowLowLimit, UpdateSourceTrigger=LostFocus, StringFormat=F2}"
                            Header="LL"
                            Width="0.5*" />
                        <DataGridCheckBoxColumn Binding="{Binding IsOutlierDetectionEnabled, UpdateSourceTrigger=PropertyChanged}" Header="Outlier?">
                            <DataGridCheckBoxColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <EventSetter Event="CheckBox.Checked" Handler="ConfigTagCheckBox_Changed_SaveChanges" />
                                    <EventSetter Event="CheckBox.Unchecked" Handler="ConfigTagCheckBox_Changed_SaveChanges" />
                                </Style>
                            </DataGridCheckBoxColumn.CellStyle>
                        </DataGridCheckBoxColumn>
                        <DataGridTextColumn
                            Binding="{Binding CurrentAlarmState, Mode=OneWay}"
                            Header="Alarm Status"
                            IsReadOnly="True"
                            Width="Auto" />
                        <DataGridTemplateColumn Width="Auto">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button
                                        Command="{Binding DataContext.UnmonitorTagFromListCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                        CommandParameter="{Binding}"
                                        Content="X"
                                        ToolTip="Verwijder tag van monitoring" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="Plot" Width="Auto">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Button
                                            Command="{Binding DataContext.OpenNewPlotTabCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                            CommandParameter="{Binding}"
                                            Content="Nieuw"
                                            IsEnabled="{Binding IsActive}"
                                            Margin="2"
                                            Padding="3,1" />
                                        <Button
                                            Command="{Binding DataContext.AddSelectedTagToCurrentPlotCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                            CommandParameter="{Binding}"
                                            Content="+ Bestaand"
                                            IsEnabled="{Binding IsActive}"
                                            Margin="2"
                                            Padding="3,1" />
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>

                <GridSplitter
                    Background="LightGray"
                    Grid.Row="2"
                    Height="5"
                    HorizontalAlignment="Stretch"
                    ShowsPreview="True"
                    VerticalAlignment="Stretch" />



                <TabControl
                    Grid.Row="3"
                    ItemsSource="{Binding ActivePlotTabs}"
                    Margin="0,5,0,0"
                    MinHeight="150"
                    SelectedItem="{Binding SelectedPlotTab}">
                    <TabControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Header}" VerticalAlignment="Center" />
                                <Button
                                    Command="{Binding CloseTabCommand}"
                                    Content="X"
                                    FontSize="10"
                                    FontWeight="Bold"
                                    Margin="5,0,0,0"
                                    Padding="3,0"
                                    ToolTip="Sluit deze grafiek tab" />
                            </StackPanel>
                        </DataTemplate>
                    </TabControl.ItemTemplate>
                    <TabControl.ContentTemplate>
                        <DataTemplate>
                            <views:SinglePlotView DataContext="{Binding}" />
                        </DataTemplate>
                    </TabControl.ContentTemplate>
                </TabControl>

            </Grid>
        </Grid>
    </Grid>
</UserControl>