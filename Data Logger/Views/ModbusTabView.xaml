<UserControl x:Class="Data_Logger.Views.ModbusTabView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vm="clr-namespace:Data_Logger.ViewModels"
             xmlns:views="clr-namespace:Data_Logger.Views" xmlns:converters="clr-namespace:Data_Logger.Converters"
             xmlns:enums="clr-namespace:Data_Logger.Enums"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance Type=vm:ModbusTabViewModel, IsDesignTimeCreatable=False}"
             d:DesignHeight="700" d:DesignWidth="800">

    <UserControl.Resources>
        <converters:BooleanToConnectionStatusConverter x:Key="BooleanToConnectionStatusConverter" />
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter" />
        
        <Style TargetType="{x:Type TabItem}" x:Key="PlotTabItemStyleModbusBased">
            <Setter Property="Padding" Value="5,2"/>
            <Setter Property="HeaderTemplate">
                <Setter.Value>
                    <DataTemplate DataType="{x:Type vm:PlotTabViewModel}">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Header}" VerticalAlignment="Center" Margin="0,0,8,0"/>
                            <Button Command="{Binding CloseTabCommand}" Content="&#x2715;" Padding="4,0" FontSize="10" FontWeight="Bold"
                                    Background="Transparent" BorderThickness="0" Foreground="DimGray" Cursor="Hand"
                                    ToolTip="Sluit dit grafiektabblad">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Button">
                                                    <Border Background="{TemplateBinding Background}">
                                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True"><Setter Property="Foreground" Value="Red"/></Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </StackPanel>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type TypeName=System:Enum}" x:Key="ModbusRegisterTypeEnumValues">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enums:ModbusRegisterType" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type TypeName=System:Enum}" x:Key="ModbusDataTypeEnumValues">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enums:ModbusDataType" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </UserControl.Resources>

    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/> 
            <RowDefinition Height="Auto"/> 
            <RowDefinition Height="*"/>    
            <RowDefinition Height="150"/> 
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0" Margin="0,0,0,10">
            <TextBlock Text="{Binding ModbusConfig.ConnectionName}" FontSize="18" FontWeight="Bold"/>
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="IP: " FontWeight="SemiBold"/><TextBlock Text="{Binding ModbusConfig.IpAddress}"/>
                <TextBlock Text=":" Margin="2,0,2,0"/><TextBlock Text="{Binding ModbusConfig.Port}" Margin="0,0,10,0"/>
                <TextBlock Text="Unit ID: " FontWeight="SemiBold"/><TextBlock Text="{Binding ModbusConfig.UnitId}"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="0,5,0,5">
                <TextBlock Text="Status: " FontWeight="SemiBold"/>
                <TextBlock Text="{Binding IsConnected, Converter={StaticResource BooleanToConnectionStatusConverter}}" />
                <TextBlock Text=" (Scan Interval: " Margin="5,0,0,0" FontWeight="SemiBold"/>
                <TextBlock Text="{Binding ModbusConfig.ScanIntervalSeconds}" /><TextBlock Text="s)" />
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <Button Content="Verbinden" Command="{Binding ConnectCommand}" MinWidth="100" Margin="0,0,5,0"/>
                <Button Content="Verbinding Verbreken" Command="{Binding DisconnectCommand}" MinWidth="100"/>
            </StackPanel>
        </StackPanel>

        <GroupBox Grid.Row="1" Header="Geconfigureerde Modbus Tags (Direct Bewerken en Plot Acties)" Margin="0,5,0,5" Padding="2">
            <DataGrid ItemsSource="{Binding ModbusConfig.TagsToMonitor}" AutoGenerateColumns="False"
                      CanUserAddRows="False" CanUserDeleteRows="False" MaxHeight="200" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto"
                      RowEditEnding="DataGrid_RowEditEnding_SaveChanges" CellEditEnding="DataGrid_CellEditEnding_SaveChanges"> <DataGrid.Columns>
                    <DataGridTextColumn Header="Tag Naam" Binding="{Binding TagName, UpdateSourceTrigger=LostFocus}" Width="1.5*"/>
                    <DataGridTextColumn Header="Adres" Binding="{Binding Address, UpdateSourceTrigger=LostFocus}" Width="Auto"/>
                    <DataGridComboBoxColumn Header="Register Type" Width="*"
                                            SelectedValueBinding="{Binding RegisterType, UpdateSourceTrigger=PropertyChanged}"
                                            ItemsSource="{Binding Source={StaticResource ModbusRegisterTypeEnumValues}}"/>
                    <DataGridComboBoxColumn Header="Data Type" Width="*"
                                            SelectedValueBinding="{Binding DataType, UpdateSourceTrigger=PropertyChanged}"
                                            ItemsSource="{Binding Source={StaticResource ModbusDataTypeEnumValues}}"
                                            IsReadOnly="{Binding IsDataTypeSelectionEnabled, Converter={StaticResource InverseBooleanConverter}}"/>
                    <DataGridCheckBoxColumn Header="Actief" Width="Auto"
                                            Binding="{Binding IsActive, UpdateSourceTrigger=PropertyChanged}"/>
                    <DataGridTemplateColumn Header="Grafiek Actie" Width="Auto">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Button Content="Toon Grafiek" Margin="2" Padding="3,1" FontSize="10"
                                            Command="{Binding DataContext.OpenPlotForTagCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                            CommandParameter="{Binding}"/>
                                    <Button Content="+ Huidige Grafiek" Margin="2" Padding="3,1" FontSize="10"
                                            Command="{Binding DataContext.AddSelectedTagToCurrentPlotCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                            CommandParameter="{Binding}"
                                            ToolTip="Voeg deze tag toe aan de actieve grafiek tab"/>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </GroupBox>

        <TabControl Grid.Row="2" ItemsSource="{Binding ActivePlotTabs}" SelectedItem="{Binding SelectedPlotTab}" Margin="0,5,0,5" Padding="2">
            <TabControl.ItemContainerStyle>
                <StaticResource ResourceKey="PlotTabItemStyleModbusBased"/>
            </TabControl.ItemContainerStyle>
            <TabControl.ContentTemplate>
                <DataTemplate DataType="{x:Type vm:PlotTabViewModel}">
                    <views:SinglePlotView Margin="2"/>
                </DataTemplate>
            </TabControl.ContentTemplate>
        </TabControl>

        <GroupBox Grid.Row="3" Header="Live Modbus Waarden (DataGrid)" Margin="0,5,0,0" Padding="2">
            <DataGrid ItemsSource="{Binding DataValues}" AutoGenerateColumns="False" CanUserAddRows="False" IsReadOnly="True" AlternationCount="2" VerticalScrollBarVisibility="Auto">
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Setter Property="ToolTip" Value="{Binding ErrorMessage}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding AlarmState}" Value="{x:Static enums:TagAlarmState.High}"><Setter Property="Background" Value="LightGoldenrodYellow"/></DataTrigger>
                            <DataTrigger Binding="{Binding AlarmState}" Value="{x:Static enums:TagAlarmState.Low}"><Setter Property="Background" Value="LightGoldenrodYellow"/></DataTrigger>
                            <DataTrigger Binding="{Binding AlarmState}" Value="{x:Static enums:TagAlarmState.HighHigh}"><Setter Property="Background" Value="LightPink"/><Setter Property="FontWeight" Value="Bold"/></DataTrigger>
                            <DataTrigger Binding="{Binding AlarmState}" Value="{x:Static enums:TagAlarmState.LowLow}"><Setter Property="Background" Value="LightPink"/><Setter Property="FontWeight" Value="Bold"/></DataTrigger>
                            <DataTrigger Binding="{Binding AlarmState}" Value="{x:Static enums:TagAlarmState.Outlier}"><Setter Property="Background" Value="LightSkyBlue"/> <Setter Property="FontStyle" Value="Italic"/></DataTrigger>
                            <DataTrigger Binding="{Binding AlarmState}" Value="{x:Static enums:TagAlarmState.Error}"><Setter Property="Background" Value="LightGray"/><Setter Property="Foreground" Value="DarkRed"/> <Setter Property="FontStyle" Value="Italic"/></DataTrigger>
                            <Trigger Property="ItemsControl.AlternationIndex" Value="1"><Setter Property="Background" Value="#EFEFEF" /></Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Tijdstempel" Binding="{Binding Timestamp, StringFormat='HH:mm:ss.fff'}" Width="Auto" SortDirection="Descending"/>
                    <DataGridTextColumn Header="Tag Naam" Binding="{Binding TagName}" Width="*"/>
                    <DataGridTextColumn Header="Waarde" Binding="{Binding FormattedValue}" Width="Auto"/>
                    <DataGridTextColumn Header="Kwaliteit" Width="Auto">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="ToolTip" Value="{Binding ErrorMessage}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsGoodQuality}" Value="True"><Setter Property="Foreground" Value="DarkGreen"/></DataTrigger>
                                    <DataTrigger Binding="{Binding IsGoodQuality}" Value="False"><Setter Property="Foreground" Value="DarkRed"/></DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsGoodQuality}" Value="True"><Setter Property="Text" Value="Goed"/></DataTrigger>
                                    <DataTrigger Binding="{Binding IsGoodQuality}" Value="False"><Setter Property="Text" Value="Slecht"/></DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Alarm Status" Binding="{Binding AlarmState}" Width="Auto">
                        </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
        </GroupBox>
    </Grid>
</UserControl>